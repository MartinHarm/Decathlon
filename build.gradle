import org.asciidoctor.gradle.AsciidoctorTask

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath group: 'io.swagger', name: 'swagger-core', version: '1.5.10'
        classpath group: 'com.github.kongchen', name: 'swagger-maven-plugin', version: '3.1.4'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
    }
}


apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: "org.asciidoctor.gradle.asciidoctor"


repositories {
  mavenCentral()
}

ext {
    powerMockVersion = '1.7.1'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'javax.inject:javax.inject:1'
    compile "io.springfox:springfox-swagger2:2.5.0"
    compile "io.springfox:springfox-bean-validators:2.5.0"
    compile "io.springfox:springfox-staticdocs:2.5.0"
    testCompile "org.powermock:powermock-api-mockito:$powerMockVersion"
    testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
    testCompile "org.powermock:powermock-module-testng:$powerMockVersion"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
    testCompile 'org.assertj:assertj-core:3.4.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

task generateSwaggerdocumentation(type: Test) {
    include '**/*Swagger2MarkupTest.class'
    group 'documentation'
    description 'Generate swagger documentation'
}

task generateAPIDoc(type: AsciidoctorTask) {
    dependsOn generateSwaggerdocumentation
    group 'documentation'
    sourceDir = file('src/main/resources/static/doc/asciidoc')
    outputDir = file('src/main/resources/static/doc')
    sources {
        include 'api_doc.adoc'
    }
    logDocuments = true
    backends = ['html5']
    attributes = [
            toc: 'left',
            toclevels: '2',
            numbered: '',
            generated: file('src/main/resources/static/doc/asciidoc')
    ]
}